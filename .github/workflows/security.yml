name: 🛡️ Security Scan

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  schedule:
    - cron: '0 6 * * 1' # Weekly on Monday at 6 AM UTC

permissions:
  actions: read
  contents: read
  security-events: write

jobs:
  # 🔒 Dependency Check
  dependency-check:
    name: 🔒 Dependency Vulnerability Scan
    runs-on: ubuntu-latest

    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4

    - name: 🔧 Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'

    - name: 📦 Restore dependencies
      run: dotnet restore

    - name: 🔍 Run dependency check
      run: |
        dotnet list package --vulnerable --include-transitive 2>&1 | tee vulnerability-report.txt
        if grep -q "has the following vulnerable packages" vulnerability-report.txt; then
          echo "⚠️ Vulnerable packages found!"
          exit 1
        else
          echo "✅ No vulnerable packages found"
        fi

    - name: 📄 Upload vulnerability report
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: vulnerability-report
        path: vulnerability-report.txt

  # 🔍 CodeQL Analysis
  codeql:
    name: 🔍 CodeQL Security Analysis
    runs-on: ubuntu-latest

    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4

    - name: 🔧 Initialize CodeQL
      uses: github/codeql-action/init@v3
      with:
        languages: csharp
        queries: security-extended,security-and-quality

    - name: 🔧 Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'

    - name: 🏗️ Build solution
      run: |
        dotnet restore
        dotnet build --configuration Release

    - name: 🔍 Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3
      with:
        category: "/language:csharp"

  # 🐳 Docker Security Scan
  docker-security:
    name: 🐳 Docker Security Scan
    runs-on: ubuntu-latest
    if: github.event_name == 'push'

    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4

    - name: 🐳 Build Docker image
      run: |
        docker build -f src/CronCaps.API/Dockerfile -t croncaps-api:security-scan .

    - name: 🔍 Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: 'croncaps-api:security-scan'
        format: 'sarif'
        output: 'trivy-results.sarif'

    - name: 📄 Upload Trivy scan results
      uses: github/codeql-action/upload-sarif@v3
      if: always()
      with:
        sarif_file: 'trivy-results.sarif'

  # 🔐 Secrets Detection
  secrets-detection:
    name: 🔐 Secrets Detection
    runs-on: ubuntu-latest

    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: 🔍 Run TruffleHog
      uses: trufflesecurity/trufflehog@main
      with:
        path: ./
        base: ${{ github.event.repository.default_branch }}
        head: HEAD
        extra_args: --debug --only-verified

  # 📋 Security Summary
  security-summary:
    name: 📋 Security Summary
    runs-on: ubuntu-latest
    needs: [dependency-check, codeql, docker-security, secrets-detection]
    if: always()

    steps:
    - name: 📋 Security Summary
      run: |
        echo "## 🛡️ CronCaps Backend Security Scan Summary" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "| Security Check | Status |" >> $GITHUB_STEP_SUMMARY
        echo "|----------------|--------|" >> $GITHUB_STEP_SUMMARY
        echo "| 🔒 Dependency Check | ${{ needs.dependency-check.result }} |" >> $GITHUB_STEP_SUMMARY
        echo "| 🔍 CodeQL Analysis | ${{ needs.codeql.result }} |" >> $GITHUB_STEP_SUMMARY
        echo "| 🐳 Docker Security | ${{ needs.docker-security.result }} |" >> $GITHUB_STEP_SUMMARY
        echo "| 🔐 Secrets Detection | ${{ needs.secrets-detection.result }} |" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### 📊 Scan Details" >> $GITHUB_STEP_SUMMARY
        echo "- **Triggered by:** ${{ github.event_name }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Branch:** ${{ github.ref_name }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Commit:** ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY

        if [[ "${{ needs.dependency-check.result }}" == "failure" || "${{ needs.codeql.result }}" == "failure" || "${{ needs.docker-security.result }}" == "failure" || "${{ needs.secrets-detection.result }}" == "failure" ]]; then
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "⚠️ **Security issues detected!** Please review the scan results and address any vulnerabilities." >> $GITHUB_STEP_SUMMARY
        else
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "✅ **All security checks passed!** No critical vulnerabilities detected." >> $GITHUB_STEP_SUMMARY
        fi